<?php
if (version_compare(PHP_VERSION, '4.3', '<')) {
    echo 'At least PHP 4.3 is required to run this script!';
    exit(1);
}

/**
 * Class RequirementChecker
 */
class RequirementChecker
{

    /**
     * base64 representation of web/index.php with minified css included
     * use http://base64.ru/ for edit purposes
     * @var string
     */
    public $webView = '';
    /**
     * use http://base64.ru/ for edit purposes
     * base64 representation of console/index.php
     * @var string
     */
    public $consoleView = 'LyogQHZhciBZaWlSZXF1aXJlbWVudENoZWNrZXIgJHRoaXMgKi8KLyogQHZhciBhcnJheSAkc3VtbWFyeSAqLwovKiBAdmFyIGFycmF5W10gJHJlcXVpcmVtZW50cyAqLwoKZWNobyAiXG5ZaWkgQXBwbGljYXRpb24gUmVxdWlyZW1lbnQgQ2hlY2tlclxuXG4iOwoKZWNobyAiVGhpcyBzY3JpcHQgY2hlY2tzIGlmIHlvdXIgc2VydmVyIGNvbmZpZ3VyYXRpb24gbWVldHMgdGhlIHJlcXVpcmVtZW50c1xuIjsKZWNobyAiZm9yIHJ1bm5pbmcgWWlpIGFwcGxpY2F0aW9uLlxuIjsKZWNobyAiSXQgY2hlY2tzIGlmIHRoZSBzZXJ2ZXIgaXMgcnVubmluZyB0aGUgcmlnaHQgdmVyc2lvbiBvZiBQSFAsXG4iOwplY2hvICJpZiBhcHByb3ByaWF0ZSBQSFAgZXh0ZW5zaW9ucyBoYXZlIGJlZW4gbG9hZGVkLCBhbmQgaWYgcGhwLmluaSBmaWxlIHNldHRpbmdzIGFyZSBjb3JyZWN0LlxuIjsKCiRoZWFkZXIgPSAnQ2hlY2sgY29uY2x1c2lvbjonOwplY2hvICJcbnskaGVhZGVyfVxuIjsKZWNobyBzdHJfcGFkKCcnLCBzdHJsZW4oJGhlYWRlciksICctJykuIlxuXG4iOwoKZm9yZWFjaCAoJHJlcXVpcmVtZW50cyBhcyAka2V5ID0+ICRyZXF1aXJlbWVudCkgewoJaWYgKCRyZXF1aXJlbWVudFsnY29uZGl0aW9uJ10pIHsKCQllY2hvICRyZXF1aXJlbWVudFsnbmFtZSddLiI6IE9LXG4iOwoJCWVjaG8gIlxuIjsKCX0gZWxzZSB7CgkJZWNobyAkcmVxdWlyZW1lbnRbJ25hbWUnXS4nOiAnLigkcmVxdWlyZW1lbnRbJ21hbmRhdG9yeSddID8gJ0ZBSUxFRCEhIScgOiAnV0FSTklORyEhIScpLiJcbiI7CgkJZWNobyAnUmVxdWlyZWQgYnk6ICcuc3RyaXBfdGFncygkcmVxdWlyZW1lbnRbJ2J5J10pLiJcbiI7CgkJJG1lbW8gPSBzdHJpcF90YWdzKCRyZXF1aXJlbWVudFsnbWVtbyddKTsKCQlpZiAoIWVtcHR5KCRtZW1vKSkgewoJCQllY2hvICdNZW1vOiAnLnN0cmlwX3RhZ3MoJHJlcXVpcmVtZW50WydtZW1vJ10pLiJcbiI7CgkJfQoJCWVjaG8gIlxuIjsKCX0KfQoKJHN1bW1hcnlTdHJpbmcgPSAnRXJyb3JzOiAnLiRzdW1tYXJ5WydlcnJvcnMnXS4nICAgV2FybmluZ3M6ICcuJHN1bW1hcnlbJ3dhcm5pbmdzJ10uJyAgIFRvdGFsIGNoZWNrczogJy4kc3VtbWFyeVsndG90YWwnXTsKZWNobyBzdHJfcGFkKCcnLCBzdHJsZW4oJHN1bW1hcnlTdHJpbmcpLCAnLScpLiJcbiI7CmVjaG8gJHN1bW1hcnlTdHJpbmc7CgplY2hvICJcblxuIjsK';

    /**
     * Check the given requirements, collecting results into internal field.
     * This method can be invoked several times checking different requirement sets.
     * Use [[getResult()]] or [[render()]] to get the results.
     *
     * @return static self instance.
     */
    function check()
    {
        $requirements = self::getRequirements();

        if (is_string($requirements)) {
            $requirements = require($requirements);
        }
        if (!is_array($requirements)) {
            $this->usageError('Requirements must be an array, "' . gettype($requirements) . '" has been given!');
        }
        if (!isset($this->result) || !is_array($this->result)) {
            $this->result = array(
                'summary' => array(
                    'total' => 0,
                    'errors' => 0,
                    'warnings' => 0,
                ),
                'requirements' => array(),
            );
        }
        foreach ($requirements as $key => $rawRequirement) {
            $requirement = $this->normalizeRequirement($rawRequirement, $key);
            $this->result['summary']['total']++;
            if (!$requirement['condition']) {
                if ($requirement['mandatory']) {
                    $requirement['error'] = true;
                    $requirement['warning'] = true;
                    $this->result['summary']['errors']++;
                } else {
                    $requirement['error'] = false;
                    $requirement['warning'] = true;
                    $this->result['summary']['warnings']++;
                }
            } else {
                $requirement['error'] = false;
                $requirement['warning'] = false;
            }
            $this->result['requirements'][] = $requirement;
        }
        return $this;
    }

    /**
     * Return the check results.
     * @return array|null check results in format:
     *
     * ```php
     * array(
     *     'summary' => array(
     *         'total' => total number of checks,
     *         'errors' => number of errors,
     *         'warnings' => number of warnings,
     *     ),
     *     'requirements' => array(
     *         array(
     *             ...
     *             'error' => is there an error,
     *             'warning' => is there a warning,
     *         ),
     *         ...
     *     ),
     * )
     * ```
     */
    function getResult()
    {
        if (isset($this->result)) {
            return $this->result;
        } else {
            return null;
        }
    }

    /**
     * Renders the requirements check result.
     * The output will vary depending is a script running from web or from console.
     */
    function render()
    {
        if (!isset($this->result)) {
            $this->usageError('Nothing to render!');
        }
        $baseViewFilePath = dirname(__FILE__) . DIRECTORY_SEPARATOR . 'views';
        if (!empty($_SERVER['argv'])) {
            $type = 'console';
        } else {
            $type = 'web';
        }
        $this->renderViewFile($type, $this->result);
    }

    /**
     * Checks if the given PHP extension is available and its version matches the given one.
     *
     * @param string $extensionName PHP extension name.
     * @param string $version       required PHP extension version.
     * @param string $compare       comparison operator, by default '>='
     *
     * @return boolean if PHP extension version matches.
     */
    function checkPhpExtensionVersion($extensionName, $version, $compare = '>=')
    {
        if (!extension_loaded($extensionName)) {
            return false;
        }
        $extensionVersion = phpversion($extensionName);
        if (empty($extensionVersion)) {
            return false;
        }
        if (strncasecmp($extensionVersion, 'PECL-', 5) == 0) {
            $extensionVersion = substr($extensionVersion, 5);
        }
        return version_compare($extensionVersion, $version, $compare);
    }

    /**
     * Checks if PHP configuration option (from php.ini) is on.
     *
     * @param string $name configuration option name.
     *
     * @return boolean option is on.
     */
    function checkPhpIniOn($name)
    {
        $value = ini_get($name);
        if (empty($value)) {
            return false;
        }
        return ((integer)$value == 1 || strtolower($value) == 'on');
    }

    /**
     * Checks if PHP configuration option (from php.ini) is off.
     *
     * @param string $name configuration option name.
     *
     * @return boolean option is off.
     */
    function checkPhpIniOff($name)
    {
        $value = ini_get($name);
        if (empty($value)) {
            return true;
        }
        return (strtolower($value) == 'off');
    }

    /**
     * Compare byte sizes of values given in the verbose representation,
     * like '5M', '15K' etc.
     *
     * @param string $a       first value.
     * @param string $b       second value.
     * @param string $compare comparison operator, by default '>='.
     *
     * @return boolean comparison result.
     */
    function compareByteSize($a, $b, $compare = '>=')
    {
        $compareExpression = '(' . $this->getByteSize($a) . $compare . $this->getByteSize($b) . ')';
        return $this->evaluateExpression($compareExpression);
    }

    /**
     * Gets the size in bytes from verbose size representation.
     * For example: '5K' => 5*1024
     *
     * @param string $verboseSize verbose size representation.
     *
     * @return integer actual size in bytes.
     */
    function getByteSize($verboseSize)
    {
        if (empty($verboseSize)) {
            return 0;
        }
        if (is_numeric($verboseSize)) {
            return (integer)$verboseSize;
        }
        $sizeUnit = trim($verboseSize, '0123456789');
        $size = str_replace($sizeUnit, '', $verboseSize);
        $size = trim($size);
        if (!is_numeric($size)) {
            return 0;
        }
        switch (strtolower($sizeUnit)) {
            case 'kb':
            case 'k':
            {
                return $size * 1024;
            }
            case 'mb':
            case 'm':
            {
                return $size * 1024 * 1024;
            }
            case 'gb':
            case 'g':
            {
                return $size * 1024 * 1024 * 1024;
            }
            default:
                {
                return 0;
                }
        }
    }

    /**
     * Checks if upload max file size matches the given range.
     *
     * @param string|null $min verbose file size minimum required value, pass null to skip minimum check.
     * @param string|null $max verbose file size maximum required value, pass null to skip maximum check.
     *
     * @return boolean success.
     */
    function checkUploadMaxFileSize($min = null, $max = null)
    {
        $postMaxSize = ini_get('post_max_size');
        $uploadMaxFileSize = ini_get('upload_max_filesize');
        if ($min !== null) {
            $minCheckResult = $this->compareByteSize($postMaxSize, $min, '>=') && $this->compareByteSize($uploadMaxFileSize, $min, '>=');
        } else {
            $minCheckResult = true;
        }
        if ($max !== null) {
            var_dump($postMaxSize, $uploadMaxFileSize, $max);
            $maxCheckResult = $this->compareByteSize($postMaxSize, $max, '<=') && $this->compareByteSize($uploadMaxFileSize, $max, '<=');
        } else {
            $maxCheckResult = true;
        }
        return ($minCheckResult && $maxCheckResult);
    }

    /**
     * Renders a view file.
     * This method includes the view file as a PHP script
     * and captures the display result if required.
     *
     * @param string  $_type    application type
     * @param array   $_data_   data to be extracted and made available to the view file
     * @param boolean $_return_ whether the rendering result should be returned as a string
     *
     * @return string the rendering result. Null if the rendering result is not required.
     */
    function renderViewFile($_type, $_data_ = null, $_return_ = false)
    {
        // we use special variable names here to avoid conflict when extracting data
        if (is_array($_data_)) {
            extract($_data_, EXTR_PREFIX_SAME, 'data');
        } else {
            $data = $_data_;
        }
        if ($_return_) {
            ob_start();
            ob_implicit_flush(false);
            eval(base64_decode($_type == 'console' ? $this->consoleView : $this->webView));
            return ob_get_clean();
        } else {
            //@debug
            //require(dirname(__FILE__) . DIRECTORY_SEPARATOR . 'views' . DIRECTORY_SEPARATOR . 'web' . DIRECTORY_SEPARATOR . 'index.php');
            eval(base64_decode($_type == 'console' ? $this->consoleView : $this->webView));
        }
    }

    /**
     * Normalizes requirement ensuring it has correct format.
     *
     * @param array $requirement    raw requirement.
     * @param int   $requirementKey requirement key in the list.
     *
     * @return array normalized requirement.
     */
    function normalizeRequirement($requirement, $requirementKey = 0)
    {
        if (!is_array($requirement)) {
            $this->usageError('Requirement must be an array!');
        }
        if (!array_key_exists('condition', $requirement)) {
            $this->usageError("Requirement '{$requirementKey}' has no condition!");
        } else {
            $evalPrefix = 'eval:';
            if (is_string($requirement['condition']) && strpos($requirement['condition'], $evalPrefix) === 0) {
                $expression = substr($requirement['condition'], strlen($evalPrefix));
                $requirement['condition'] = $this->evaluateExpression($expression);
            }
        }
        if (!array_key_exists('name', $requirement)) {
            $requirement['name'] = is_numeric($requirementKey) ? 'Requirement #' . $requirementKey : $requirementKey;
        }
        if (!array_key_exists('mandatory', $requirement)) {
            if (array_key_exists('required', $requirement)) {
                $requirement['mandatory'] = $requirement['required'];
            } else {
                $requirement['mandatory'] = false;
            }
        }
        if (!array_key_exists('by', $requirement)) {
            $requirement['by'] = 'Unknown';
        }
        if (!array_key_exists('memo', $requirement)) {
            $requirement['memo'] = '';
        }
        if (!array_key_exists('value', $requirement)) {
            $requirement['value'] = '';
        }
        return $requirement;
    }

    /**
     * Displays a usage error.
     * This method will then terminate the execution of the current application.
     *
     * @param string $message the error message
     */
    function usageError($message)
    {
        echo "Error: $message\n\n";
        exit(1);
    }

    /**
     * Evaluates a PHP expression under the context of this class.
     *
     * @param string $expression a PHP expression to be evaluated.
     *
     * @return mixed the expression result.
     */
    function evaluateExpression($expression)
    {
        return eval('return ' . $expression . ';');
    }

    /**
     * Returns the server information.
     * @return string server information.
     */
    function getServerInfo()
    {
        $info = isset($_SERVER['SERVER_SOFTWARE']) ? $_SERVER['SERVER_SOFTWARE'] : '';
        return $info;
    }

    /**
     * Returns the now date if possible in string representation.
     * @return string now date.
     */
    function getNowDate()
    {
        $nowDate = @strftime('%Y-%m-%d %H:%M', time());
        return $nowDate;
    }

    /**
     * Requirements array. All checks goes here.
     * array(
     *         'name' => 'PHP Some Extension',
     *         'mandatory' => true,
     *         'condition' => extension_loaded('some_extension'),
     *         'value' => 'get_value',
     *         'by' => 'Some application feature',
     *         'memo' => 'PHP extension "some_extension" required',
     *     ),
     * @return array
     */
    private function getRequirements()
    {
        return array(
            array(
                'name' => 'PHP version',
                'mandatory' => true,
                'condition' => version_compare(PHP_VERSION, '5.3.0', '>='),
                'value' => phpversion(),
                'by' => '<a href="http://www.yiiframework.com">Yii Framework</a>',
                'memo' => 'PHP 5.3.0 or higher is required.',
            ),
            array(
                'name' => 'Reflection extension',
                'mandatory' => true,
                'condition' => class_exists('Reflection', false),
                'by' => '<a href="http://www.yiiframework.com">Yii Framework</a>',
            ),
            array(
                'name' => 'PCRE extension',
                'mandatory' => true,
                'condition' => extension_loaded('pcre'),
                'by' => '<a href="http://www.yiiframework.com">Yii Framework</a>',
            ),
            array(
                'name' => 'SPL extension',
                'mandatory' => true,
                'condition' => extension_loaded('SPL'),
                'by' => '<a href="http://www.yiiframework.com">Yii Framework</a>',
            ),
            array(
                'name' => 'MBString extension',
                'mandatory' => true,
                'condition' => extension_loaded('mbstring'),
                'by' => '<a href="http://www.php.net/manual/en/book.mbstring.php">Multibyte string</a> processing',
                'memo' => 'Required for multibyte encoding string processing.'
            ),
            array(
                'name' => 'Intl extension',
                'mandatory' => false,
                'condition' => $this->checkPhpExtensionVersion('intl', '1.0.2', '>='),
                'by' => '<a href="http://www.php.net/manual/en/book.intl.php">Internationalization</a> support',
                'memo' => 'PHP Intl extension 1.0.2 or higher is required when you want to use advanced parameters formatting
		in <code>Yii::t()</code>, <abbr title="Internationalized domain names">IDN</abbr>-feature of
		<code>EmailValidator</code> or <code>UrlValidator</code> or the <code>yii\i18n\Formatter</code> class.'
            ),
            array(
                'name' => 'DOM extension',
                'mandatory' => true,
                'condition' => class_exists('DOMDocument', false),
                'by' => '<a href="http://www.yiiframework.com/doc/api/CHtmlPurifier">CHtmlPurifier</a>, <a href="http://www.yiiframework.com/doc/api/CWsdlGenerator">CWsdlGenerator</a>',
            ),
            // Database :
            array(
                'name' => 'PDO extension',
                'mandatory' => true,
                'condition' => extension_loaded('pdo'),
                'by' => 'All <a href="http://www.yiiframework.com/doc/api/#system.db">DB-related classes</a>',
            ),
            array(
                'name' => 'PDO MySQL extension',
                'mandatory' => true,
                'condition' => extension_loaded('pdo_mysql'),
                'by' => 'All <a href="http://www.yiiframework.com/doc/api/#system.db">DB-related classes</a>',
                'memo' => 'Required for MySQL database.',
            ),
            // Cache:
            array(
                'name' => 'Memcache extension',
                'mandatory' => false,
                'condition' => extension_loaded('memcache') || extension_loaded('memcached'),
                'by' => '<a href="http://www.yiiframework.com/doc/api/CMemCache">CMemCache</a>',
                'memo' => extension_loaded('memcached') ? 'To use memcached set <a href="http://www.yiiframework.com/doc/api/CMemCache#useMemcached-detail">CMemCache::useMemcached</a> to <code>true</code>.' : ''
            ),
            // Crypt
            array(
                'name' => 'Mcrypt extension',
                'mandatory' => false,
                'condition' => extension_loaded('mcrypt'),
                'by' => '<a href="http://www.yiiframework.com/doc/api/CSecurityManager">CSecurityManager</a>',
                'memo' => 'Required by encrypt and decrypt methods.'
            ),
            // PHP extensions
            array(
                'name' => 'Mbstring extension',
                'mandatory' => false,
                'condition' => extension_loaded('mbstring'),
                'by' => '<a href="http://www.php.net/manual/en/book.mbstring.php">Multibyte string</a> processing',
                'memo' => 'Required for multibyte encoding string processing.'
            ),
            array(
                'name' => 'Curl extension',
                'mandatory' => true,
                'condition' => extension_loaded('curl'),
                'by' => '<a href="http://en.wikipedia.org/wiki/Web_service">Web Services</a> usage',
                'memo' => 'Required if application uses Web Service or performs HTTP requests.'
            ),
            array(
                'name' => 'SimpleXml extension',
                'mandatory' => false,
                'condition' => extension_loaded('SimpleXml'),
                'by' => 'XML parsing',
                'memo' => 'Required if application parses XML.'
            ),
            // PHP ini
            'phpSmtp' => array(
                'name' => 'PHP mail SMTP',
                'mandatory' => false,
                'condition' => strlen(ini_get('SMTP')) > 0,
                'by' => 'Email sending',
                'memo' => 'PHP mail SMTP server required',
            ),
            'phpMemoryLimit' => array(
                'name' => 'PHP memory limit',
                'mandatory' => true,
                'condition' => ini_get('memory_limit') == -1 || $this->compareByteSize(ini_get('memory_limit'), '128M'),
                'by' => 'Processing requests',
                'memo' => '"memory_limit" should be at least 5M',
            ),
            'phpMaxPostSize' => array(
                'name' => 'Max POST size',
                'mandatory' => true,
                'condition' => $this->compareByteSize(ini_get('post_max_size'), '8M'),
                'by' => 'Send POST request',
                'memo' => '"post_max_size" should be at least 64M',
            ),
            'phpMaxInputVars' => array(
                'name' => 'Max input vars',
                'mandatory' => false,
                'condition' => (ini_get('max_input_vars') === false) || (ini_get('max_input_vars') >= 1000),
                'by' => 'Form submission',
                'memo' => '"max_input_vars" should be at least 1000 at php.ini',
            ),
            'phpFileUploads' => array(
                'name' => 'PHP file uploads',
                'mandatory' => false,
                'condition' => $this->checkPhpIniOn('file_uploads'),
                'by' => 'Upload files from web',
                'memo' => '"file_uploads" should be enabled at php.ini',
            ),
            'phpMaxFileUploads' => array(
                'name' => 'PHP file uploads',
                'mandatory' => false,
                'condition' => ini_get('max_file_uploads') >= 20,
                'by' => 'Multiply files upload from web',
                'memo' => '"max_file_uploads" should be at least 20 at php.ini',
            ),
            'phpUploadMaxFileSize' => array(
                'name' => 'Upload max file size',
                'mandatory' => false,
                'condition' => $this->checkUploadMaxFileSize('2M'),
                'by' => 'File uploading',
                'memo' => '"upload_max_filesize" and "post_max_size" should be at least 5M at php.ini',
            ),
        );
    }
}


$requirementsChecker = new RequirementChecker();
$requirementsChecker->check()->render();
